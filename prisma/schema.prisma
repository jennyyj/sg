// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

// This is your Prisma schema file
generator client {
  provider = "prisma-client-js"
  binaryTargets = ["native", "rhel-openssl-1.0.x", "debian-openssl-1.1.x"]
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id            String         @id @default(auto()) @map("_id") @db.ObjectId
  username      String         @unique
  password      String
  phoneNumbers  PhoneNumber[]
  jobs          Job[]
  preferences   UserPreference?
}

model PhoneNumber {
  id       String   @id @default(auto()) @map("_id") @db.ObjectId
  name     String
  number   String
  categories String[] 
  userId   String   @db.ObjectId
  optedOut    Boolean  @default(false)
  user     User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Job {
  id             String    @id @default(auto()) @map("_id") @db.ObjectId
  businessName   String
  jobDescription String?
  category       String
  status         JobStatus @default(PENDING)
  shift         Shift     @relation(fields: [shiftId], references: [id])
  shiftId       String    @db.ObjectId
  userId        String    @db.ObjectId
  user          User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  claimedBy     String?
  claimedAt     DateTime?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

model Shift {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  type      ShiftType
  date      DateTime
  startTime String
  endTime   String
  jobs      Job[]
}

model UserPreference {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  userId     String   @unique @db.ObjectId
  user       User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  shiftTimes Json?
  customCategories Json? 
}

model Reminder {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  jobId       String  @db.ObjectId
  phoneNumber String
  message     String
  sendAt      DateTime
  sent        Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

enum ShiftType {
  MORNING
  MIDDAY
  NIGHT
  CUSTOM
}

enum JobStatus {
  PENDING
  CLAIMED
  REMOVED
  UNCLAIMED
}
